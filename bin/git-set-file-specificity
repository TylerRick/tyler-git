#!/usr/bin/env bash

set -euo pipefail

source "$(dirname $0)"/lib/specificity.sh

#════════════════════════════════════════════════════════════════════════════════════════════════════

usage() {
  cat - <<End >&2
Usage: $(basename "$0") <file> <specificity>

Adds or moves <file> into file_specificity_dir/<specificity>

Valid specificity: common, specific, mixed
End
}

#════════════════════════════════════════════════════════════════════════════════════════════════════

if (( "$#" < 2 )); then
  usage
  exit 64 # EX_USAGE
fi

ensure_file_specificity_dir_exists

file="$1"
specificity="$2"

#════════════════════════════════════════════════════════════════════════════════════════════════════

# validate specificity
if [[ ! "$specificity" =~ ^(common|specific|mixed)$ ]]; then
	echo "Usage: $0 <path> <common|specific|mixed>" >&2
  exit 64 # EX_USAGE
fi

# get existing specificity (allow multiple)
out=$(git-get-file-specificity "$file" 2>&1 || true)
recorded=()
if [[ "$out" =~ matches[[:space:]]+multiple[[:space:]]+lists:[[:space:]]+(.*)$ ]]; then
	read -r -a recorded <<< "${BASH_REMATCH[1]}"
elif [[ "$out" =~ ^(common|specific|mixed)$ ]]; then
	recorded=("$out")
else
	recorded=()
fi

# if not recorded yet, append and exit
if [[ ${#recorded[@]} -eq 0 ]]; then
	echo "$file" >> "$file_specificity_dir/$specificity"
	exit 0
fi

# if already exactly the same
if [[ ${#recorded[@]} -eq 1 && "${recorded[0]}" == "$specificity" ]]; then
	exit 0
fi

echo "Changed to '$specificity' (was ${recorded[*]})"

# remove from old lists
for rec in "${recorded[@]}"; do
	if [[ "$rec" != "$specificity" ]]; then
		sed -i -e "/^$(printf '%s' "$file" | sed 's/[\/&]/\\&/g')\$/d" "$file_specificity_dir/$rec"
	fi
done

# add to new list if not already
if [[ ! " ${recorded[*]} " =~ " $specificity " ]]; then
	echo "$file" >> "$file_specificity_dir/$specificity"
fi
