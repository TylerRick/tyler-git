#!/bin/bash
set -euo pipefail

# Options
short=0
show_method=0
pretty=0

# Parse arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    --short)               short=1;            shift ;;
    --show-match-method)   show_method=1;      shift ;;
    --pretty)              pretty=1;           shift ;;
    -*)
      echo "Unknown option: $1" >&2
      exit 1
      ;;
    *)
      if [[ -z "${orig_branch:-}" ]]; then
        orig_branch="$1"
      elif [[ -z "${rewritten_branch:-}" ]]; then
        rewritten_branch="$1"
      else
        echo "Unexpected argument: $1" >&2
        exit 1
      fi
      shift
      ;;
  esac
done

if [[ -z "${orig_branch:-}" || -z "${rewritten_branch:-}" ]]; then
  echo "Usage: $0 [--short] [--show-match-method] [--pretty] <original-branch> <rewritten-branch>" >&2
  exit 1
fi

# Get commits in chronological order
orig_commits=$(git rev-list --reverse "$orig_branch")
rewritten_commits=$(git rev-list --reverse "$rewritten_branch")

declare -A rewritten_by_patchid
declare -A rewritten_title_counters
declare -A rewritten_titles

# Index rewritten branch
while read -r sha; do
  # skip merges
  if [ "$(git rev-list --parents -n1 "$sha" | wc -w)" -gt 2 ]; then
    continue
  fi
  patchid=$(git diff-tree -p "$sha" | git patch-id --stable 2>/dev/null | cut -d' ' -f1 || true)
  title=$(git log -n1 --pretty=format:%s "$sha")
  [[ -n "$patchid" ]] && rewritten_by_patchid["$patchid"]=$sha
  rewritten_titles["$title"]+="$sha "
done <<< "$rewritten_commits"

# Match originals
while read -r orig_sha; do
  # skip merges
  if [ "$(git rev-list --parents -n1 "$orig_sha" | wc -w)" -gt 2 ]; then
    echo "$orig_sha ? merge-commit"
    continue
  fi

  patchid=$(git diff-tree -p "$orig_sha" | git patch-id --stable 2>/dev/null | cut -d' ' -f1 || true)
  title=$(git log -n1 --pretty=format:%s "$orig_sha")

  match_sha="" method="none"
  if [[ -n "$patchid" && -n "${rewritten_by_patchid[$patchid]:-}" ]]; then
    match_sha="${rewritten_by_patchid[$patchid]}"
    method="patch-id"
  elif [[ -n "${rewritten_titles[$title]:-}" ]]; then
    IFS=' ' read -r -a cands <<< "${rewritten_titles[$title]}"
    idx=${rewritten_title_counters["$title"]:-0}
    if (( idx < ${#cands[@]} )); then
      match_sha="${cands[$idx]}"
      method="title"
      rewritten_title_counters["$title"]=$((idx+1))
    fi
  fi

  # apply --short
  short_orig=$orig_sha
  short_match=$match_sha
  (( short )) && {
    short_orig=$(git rev-parse --short "$orig_sha")
    short_match=$(git rev-parse --short "$match_sha" 2>/dev/null || echo "$match_sha")
  }

  # pad method to 8 chars
  if (( show_method )); then
    if [[ "$method" == "patch-id" ]]; then
      method_pad="patch-id"
    else
      method_pad="title   "
    fi
    output="$short_orig $short_match $method_pad"
  else
    output="$short_orig $short_match"
  fi

  # append pretty log if requested
  if (( pretty )); then
    logline=$(git log -n1 --oneline "$match_sha" 2>/dev/null || echo "[no match]")
    output+=" $logline"
  fi

  echo "$output"
done <<< "$orig_commits"

