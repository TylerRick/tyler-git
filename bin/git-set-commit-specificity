#!/bin/bash

set -euo pipefail

cmd_name=$(basename "$0")
notes_ref=refs/notes/specificity

function usage() {
  cat - >&2 <<End
Usage: $cmd_name <specificity> [<commit>]

Examples:

  $cmd_name specific @
  $cmd_name common acfd9a6
  $cmd_name s
  $cmd_name c

End
  exit 1
}

if [ -z "${1:-}" ]; then
  usage
fi

case "${1:-}" in
  -h|--help)
    usage
    ;;
esac

specificity=$1
commit=${2:-@}

#═══════════════════════════════════════════════════════════════════════════════════════════════════

source "$(dirname $0)"/lib/colors.sh

# Normalize the specificity
case "${specificity,,}" in
  c*) specificity="common" ;;
  s*) specificity="specific" ;;
  m*) specificity="mixed" ;;
  *)
    echo "Unrecognized specificity abbreviation: '$specificity'. Use 'common', 'specific', or 'mixed' (or any abbreviation starting with 'c' or 's')."
    exit 1
    ;;
esac

git notes --ref=$notes_ref add -f -m "$specificity" "$commit" 2>/dev/null
_cyan "Marked ${bold}$commit${reset}${cyan} as ${bold}$specificity${reset}"

echo "  $(git show-oneline $commit)${reset}"
