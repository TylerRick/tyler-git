#!/bin/bash

set -euo pipefail

source "$(dirname $0)"/lib/colors.sh
source "$(dirname $0)"/lib/specificity.sh

#═══════════════════════════════════════════════════════════════════════════════════════════════════

cmd_name=$(basename "$0")
notes_ref=refs/notes/specificity

function usage() {
  cat - >&2 <<End
Usage: $cmd_name [<commit>] <specificity>

Examples:

  $cmd_name @ specific
  # Clear recorded value
  $cmd_name @ ''
  $cmd_name acfd9a6 common
  $cmd_name s
  $cmd_name c

End
  exit 1
}

case "${1:-}" in
  -h|--help)
    usage
    ;;
esac

# commit is optional
if (( "$#" == 2 )); then
  commit=$1
  specificity=$2
elif (( "$#" == 1 )); then
  commit=@
  specificity=$1
else
  usage
fi

#═══════════════════════════════════════════════════════════════════════════════════════════════════

specificity=$(normalize_specificity "$specificity")

recorded=$(git-get-commit-specificity $commit)

git notes --ref=$notes_ref add -f -m "$specificity" "$commit" 2>/dev/null
_cyan "Marked ${bold}$commit${reset}${cyan} as ${bold}$specificity${reset} (was: $recorded)"

echo "  $(git show-oneline $commit)${reset}"
