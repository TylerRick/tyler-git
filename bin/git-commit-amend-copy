#!/usr/bin/env bash

set -euo pipefail

#════════════════════════════════════════════════════════════════════════════════════════════════════

usage() {
  cat - <<End >&2
Usage:
  $(basename "$0") <orig-commit>
    Copy some details from other commit

Amends the tip commit, copying from orig-commit:
- the author/committer details
- the notes

Use case:

This can be used during a rebase, if you want...

To copy the notes as you go, so that you can be sure they get copied as you go, rather than waiting
until the very end of the rebase and hoping/trusting that you didn't modify a commit in some way
that doesn't end up getting tracked correctly in .git/rebase-merge/rewritten-list, thus preventing
the post-rebase notes copying (notes.rewriteRef) from actually working. Copying as you go is simpler
and more reliable.

Downsides: You have to insert this after every pick line (+ fixups, if any) using --exec or similar,
which makes the rebase command sequence messier.

Example:
  git rebase -i --exec 'git-commit-amend-copy \$(git-rebase-i-get-orig-commit)'

See also: git-commit-amend-copy-committer
End
  exit 64 # EX_USAGE
}

#════════════════════════════════════════════════════════════════════════════════════════════════════
# Parse options

notes_copy_opts="-f"

# TODO: pass other opts through to git-commit-amend-copy-committer
while [[ $# -gt 0 ]]; do
  case "$1" in
    --help | -h)      usage;;
    --no-force)     
      notes_copy_opts=""
      shift ;;
    --force | -f)     
      notes_copy_opts="-f"
      shift ;;
    -*)               echo "Unknown option $1" >&2; exit 1 ;;
    *) break ;;
  esac
done

# Copy commiter from commiter of other commit

if [ -z "${1-}" ] && [ -d .git/rebase-merge ]; then
  source_commit_input=$(git-rebase-i-get-orig-commit)
else
  source_commit_input=${1-}
fi

if [ -z "$source_commit_input" ]; then
  usage
fi

#════════════════════════════════════════════════════════════════════════════════════════════════════

source_commit=$(git rev-parse --verify "$source_commit_input"^{commit})

#════════════════════════════════════════════════════════════════════════════════════════════════════

set -x
git-commit-amend-copy-committer $source_commit
git-notes-copy-all "${notes_copy_opts-}" $source_commit HEAD
