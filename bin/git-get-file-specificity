#!/usr/bin/env bash
# git-get-file-specificity
# Given a file path, echo one of: common, specific, mixed (or nothing).
# Searches .git/file_specificity/{common,specific,mixed}
# Debug output enabled by default (comment out or wrap in "if [ -n \"$DEBUG\" ]" to disable later)

file="$1"
base=".git/file_specificity"

# helper: read patterns, strip comments and blank lines
to_patterns() {
  sed -e 's/#.*//' -e '/^[[:space:]]*$/d' "$1"
}

# iterate through types in unified loop
for type in common specific mixed; do
  patfile="$base/$type"
  [[ -f "$patfile" ]] || continue
  echo "[DEBUG] checking against '$type' patterns..."

  while IFS= read -r pat; do
    # strip any inline comments/trailing whitespace
    clean=$(echo "$pat" | sed -e 's/[[:space:]]*$//' )
    [[ -z "$clean" ]] && continue

    echo "[DEBUG] pattern: '$clean'"

    if [[ "$clean" == */ ]]; then
      # directory prefix match
      echo "[DEBUG] checking prefix match: '$file' == '${clean}'*"
      if [[ "$file" == ${clean}* ]]; then
        echo "$type"
        exit 0
      fi
    else
      # glob match
      echo "[DEBUG] checking glob match: '$file' == $clean"
      if [[ "$file" == $clean ]]; then
        echo "$type"
        exit 0
      fi
    fi
  done < <(to_patterns "$patfile")
done

# nothing recorded
exit 0

