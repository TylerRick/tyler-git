#!/usr/bin/env bash

set -euo pipefail

#════════════════════════════════════════════════════════════════════════════════════════════════════

usage() {
  cat - <<End >&2
Usage: $(basename "$0") <orig-commit>

Amends the tip commit, copying from orig-commit:
- the committer (name, email, and date)
- the author (name, email, and date)
- the notes that were attached to orig-commit 

Use case:

This can be used during a rebase, for example, since a rebase will by default set the committer name
to you and the committer date to now. It provides --committer-date-is-author-date if you want to
reset commiter date to copy the author date, but it provides no way to _keep_ committer date how it
was in the original commit.

Example:
  git rebase -i --exec 'git-commit-amend-copy-committer \$(git-rebase-i-get-orig-commit)'

When this is used as an exec command during a rebase -i, and we amend a commit,
we throw off git's own internal rewritten commit mapping that it would use for
notes.rewriteRefs. That is why we have to do an explicity 'notes copy' directly from this script.

To do:
- Add --no-author to let you opt out and copy only committer — or require opt-in via --reset-author

See also: git-commit-cp, git-commit-modify

End
  exit
}

if [ -z "${1-}" ]; then
  usage
fi

commit_input=$1

commit=$(git rev-parse --verify "$commit_input"^{commit})

#════════════════════════════════════════════════════════════════════════════════════════════════════

echo
echo "Prior to amending: original commit $commit:"
git-notes-show-all "$commit"

eval "$(git-commit-metadata-vars $commit)"

echo
echo "⚙️  Amending HEAD ($(git name-rev-prefer-branch @)) …"
# We can't rely on git's native notes.rewriteRef feature 
#export GIT_NOTES_REWRITE_REF=refs/notes/*
git commit --allow-empty --amend --no-edit --no-verify --reset-author
new_commit=$(git rev-parse HEAD)

echo
#echo "📤 Copying notes to new commit: $new_commit"
git-notes-copy-all "$commit" "$new_commit"
# can't use glob * here
#git notes --ref 'refs/notes/*' copy "$commit" HEAD

#echo 'Confirming from inside git-commit-amend-copy-committer:'
#git notes --ref specificity show @
echo
git-notes-show-all @
