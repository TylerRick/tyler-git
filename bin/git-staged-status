#!/usr/bin/env bash

set -euo pipefail

file="${1-}"

if ! [ "$file" ]; then
  echo "Usage: git-staged-status <file>"
  exit 64 # EX_USAGE
fi

#═══════════════════════════════════════════════════════════════════════════════════════════════════


# Check index entry (includes staged deletes and intent-to-add)
index_entry=$(git ls-files --stage -- "$file" 2>/dev/null || true)

# Check if it's staged for deletion
if git diff --cached --name-status -- "$file" | grep -q "^D"; then
  echo "staged for deletion"
  exit 0
fi

# Check intent-to-add (mode 000000, hash 40 zeroes)
if [[ "$index_entry" =~ ^000000[[:space:]]+0{40}[[:space:]]+0[[:space:]] ]]; then
  echo "intent-to-add"
  exit 0
fi

# If not in index at all
if [[ -z "$index_entry" ]]; then
  echo "error: file not tracked by git"
  exit 1
fi

# Check staging status via diff
unstaged=$(git diff -- "$file")
staged=$(git diff --cached -- "$file")

if [[ -n "$staged" && -n "$unstaged" ]]; then
  echo "partially staged"
elif [[ -n "$staged" && -z "$unstaged" ]]; then
  echo "fully staged"
elif [[ -z "$staged" && -n "$unstaged" ]]; then
  echo "not staged"
else
  echo "no changes"
fi
